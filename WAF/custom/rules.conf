# ------ Securetia ModSecurity Example Rules ------ #

# Self-Contained
SecDefaultAction "phase:1,log,auditlog,deny,status:403"
SecDefaultAction "phase:2,log,auditlog,deny,status:403"

# Anomaly Score
# SecDefaultAction "phase:1,log,auditlog,pass"
# SecDefaultAction "phase:2,log,auditlog,pass"

SecAction \
        "id:800000,\
        nolog,\
        pass,\
        setvar:tx.critical_anomaly_score=5,\
        setvar:tx.error_anomaly_score=4,\
        setvar:tx.warning_anomaly_score=3,\
        setvar:tx.notice_anomaly_score=2,\
        setvar:tx.anomaly_score_threshold=5"


# Rules

## SQL

SecRule ARGS "( or | and | not | like | union )" \
        "phase:request,\
        t:lowercase,\
        block,\
        id:700001,\
        msg:'SQL Injection Attack: Keywords',\
        severity:'WARNING',\
        setvar:tx.anomaly_score=+%{tx.warning_anomaly_score}"

SecRule ARGS "(\"|'|Â´|`|%22|%C2%B4|%60)" \
        "phase:request,\
        t:lowercase,\
        block,\
        id:700002,\
        msg:'SQL Injection Attack: Quotes',\
        severity:'WARNING',\
        setvar:tx.anomaly_score=+%{tx.warning_anomaly_score}"

SecRule ARGS "@detectSQLi" \
        "phase:request,\
        t:none,\
        block,\
        id:700003,\
        msg:'SQL Injection Attack: LibInjection',\
        severity:'CRITICAL',\
        setvar:tx.anomaly_score=+%{tx.critical_anomaly_score}"

## Command Injection

SecRule REQUEST_URI "@contains /vulnerabilities/exec/" \
        "phase:request,\
        chain,\
        t:none,\
        block,\
        id:700004,\
        msg:'Command injection',\
        severity:'CRITICAL'"
  SecRule ARGS:ip "!@rx ^(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})$" \
        setvar:tx.anomaly_score=+%{tx.critical_anomaly_score}

## XSS

SecRule ARGS "<(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t" \
        "phase:request,\
        t:lowercase,\
        block,\
        id:700005,\
        msg:'XSS Injection Attack: Fix Medium',\
        severity:'CRITICAL',\
        setvar:tx.anomaly_score=+%{tx.critical_anomaly_score}"

SecRule ARGS "@detectXSS" \
        "phase:request,\
        t:none,\
        block,\
        id:700006,\
        msg:'XSS Injection Attack: LibInjection',\
        severity:'CRITICAL',\
        setvar:tx.anomaly_score=+%{tx.critical_anomaly_score}"

## File Inclusion

SecRule REQUEST_URI "@contains /vulnerabilities/fi/" \
        "phase:request,\
        chain,\
        t:none,\
        block,\
        id:700007,\
        msg:'Remote file inclusion',\
        severity:'CRITICAL'"
  SecRule ARGS:page "!@rx (file1\.php|file2\.php|file3\.php|include\.php)" \
        setvar:tx.anomaly_score=+%{tx.critical_anomaly_score}"


# Other rules

SecRule TX:ANOMALY_SCORE "@ge %{tx.anomaly_score_threshold}" \
        "phase:request,\
        t:none,\
        deny,\
        log,\
        id:799999,\
        msg:'Inbound Anomaly Score Exceeded (Total Score: %{TX.ANOMALY_SCORE})',\
        severity:CRITICAL,\
        setvar:tx.tx_msg=%{tx.msg}"

SecRule ARGS:dev "@streq true" \
        "phase:1,\
        pass,\
        id:799998,\
        ctl:ruleEngine=DetectionOnly"


# Default SQLi tool works for us, but let's save our rules in code

SecRuleRemoveById 700001
SecRuleRemoveById 700002